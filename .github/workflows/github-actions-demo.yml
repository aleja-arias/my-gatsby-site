name: Test, Build and Deploy
run-name: ${{ github.actor }} is working on a multistage pipeline üöÄ
on:
  push:
    branches:
      - main # Replace 'main' with your default branch name if different

permissions: write-all

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run tests
      # - name: Run tests
      #   run: npm test # Replace with your actual test command

      # Save dependencies as an artifact for reuse
      - name: Upload node_modules as artifact
        uses: actions/upload-artifact@v3
        with:
          name: node_modules
          path: node_modules/

  build:
    needs: test # Runs only after the 'test' job is successful
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Download node_modules artifact
      - name: Download node_modules artifact
        uses: actions/download-artifact@v3
        with:
          name: node_modules

      # Build the Gatsby app
      - name: Build Gatsby
        run: npm run build

      # Save the build output as an artifact
      - name: Upload build output
        uses: actions/upload-artifact@v3
        with:
          name: gatsby-build
          path: public/

  deploy:
    needs: build # Runs only after the 'build' job is successful
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Download the build artifact
      - name: Download Gatsby build artifact
        uses: actions/download-artifact@v3
        with:
          name: gatsby-build

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
      
       - run: echo "üçè The deploy status is ${{ job.status }}."
